version: '3.9'

services:
  bot:
    build:
      context: .
      dockerfile: ./ci/compose/local/bot/Dockerfile
    image: bot
    command: /start
    volumes:
      - ./src:/src
    ports:
      - '8000:8000'
    env_file:
      - ./src/.env
    depends_on:
#      rabbitmq:
#        condition: service_started
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    shm_size: 128mb
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    env_file:
      - ./src/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

#  rabbitmq:
#    image: rabbitmq:3-management
#    environment:
#      RABBITMQ_DEFAULT_USER: user
#      RABBITMQ_DEFAULT_PASS: password
#      # RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit load_definitions /etc/rabbitmq/definitions.json"
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    volumes:
#      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json
#
#  celery_worker:
#    build:
#      context: .
#      dockerfile: ./compose/local/src/Dockerfile
#    image: worker
#    command: /start-celeryworker
#    volumes:
#      - ./src:/src
#    env_file:
#      - ./src/.env
#    depends_on:
#      rabbitmq:
#        condition: service_started
#      db:
#        condition: service_healthy
#
#  celery_beat:
#    build:
#      context: .
#      dockerfile: ./compose/local/src/Dockerfile
#    image: beat
#    command: /start-celerybeat
#    volumes:
#      - ./src:/src
#    env_file:
#      - ./src/.env
#    depends_on:
#      rabbitmq:
#        condition: service_started
#      db:
#        condition: service_healthy
#
#  flower:
#    build:
#      context: .
#      dockerfile: ./compose/local/src/Dockerfile
#    image: flower
#    command: /start-flower
#    volumes:
#      - ./src:/src
#    env_file:
#      - ./src/.env
#    ports:
#      - '5555:5555'
#    depends_on:
#      rabbitmq:
#        condition: service_started
#      db:
#        condition: service_healthy